# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: install headless chrome
          command:
            curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
            sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
            apt-get update \
            apt-get install -y google-chrome-stable build-essential jq git openssh-server \
            apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
      - run:
          name: run server
          command: python simpleserver.py
          background: true

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io

      
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            #python simpleserver.py
            #pytest test/test_pytest.py
            pytest test/test_selenium_test.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
          